{"version":3,"sources":["search.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,cAAA,GAAiB,SAAC,KAAD,EAAQ,QAAR;AACf,QAAA;IAAA,QAAQ,CAAC,MAAT,GAAkB;IAClB,QAAQ,CAAC,IAAT,GAAgB;MAAA,CAAA,EAAG,KAAH;;IAChB,OAAO,CAAC,GAAR,CAAY,QAAZ;IAEA,WAAA,GAAc,CAAA,CAAE,cAAF;IACd,KAAA,GAAY,IAAA,UAAA,CACV;MAAA,MAAA,EACE;QAAA,GAAA,EAAK,eAAL;QACA,OAAA,EAAS,cADT;QAEA,SAAA,EAAW,SAAC,QAAD;iBAAc,QAAQ,CAAC;QAAvB,CAFX;OADF;MAIA,cAAA,EAAgB,UAAU,CAAC,UAAU,CAAC,UAJtC;MAKA,cAAA,EAAgB,UAAU,CAAC,UAAU,CAAC,UALtC;KADU;WASZ,WAAW,CAAC,SAAZ,CAAsB,IAAtB,EAA4B;MAAE,MAAA,EAAQ,KAAV;KAA5B;EAfe;AAAjB","file":"search.js","sourcesContent":["prepareRequest = (query, settings) ->\r\n  settings.method = 'get'\r\n  settings.data = q: query\r\n  console.log(settings)\r\n\r\n  searchInput = $('#searchInput')\r\n  users = new Bloodhound(\r\n    remote:\r\n      url: '/users/search'\r\n      prepare: prepareRequest\r\n      transform: (response) -> response.data\r\n    queryTokenizer: Bloodhound.tokenizers.whitespace\r\n    datumTokenizer: Bloodhound.tokenizers.whitespace\r\n  )\r\n\r\n  searchInput.typeahead(null, { source: users })\r\n"],"sourceRoot":"/source/"}