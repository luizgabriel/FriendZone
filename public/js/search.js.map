{"version":3,"sources":["search.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,WAAA,GAAc,CAAA,CAAE,cAAF;;EACd,MAAA,GAAa,IAAA,UAAA,CACX;IAAA,MAAA,EACE;MAAA,GAAA,EAAK,eAAL;MACA,OAAA,EAAS,cADT;MAEA,SAAA,EAAW,SAAC,QAAD;eAAc,QAAQ,CAAC;MAAvB,CAFX;KADF;IAIA,cAAA,EAAgB,UAAU,CAAC,UAAU,CAAC,UAJtC;IAKA,cAAA,EAAgB,UAAU,CAAC,UAAU,CAAC,UALtC;GADW;;EASb,MAAM,CAAC,UAAP,CAAA;;EACA,WAAW,CAAC,SAAZ,CAAsB;IAAA,SAAA,EAAW;MAAC,IAAD,EAAO;QAAE,MAAA,EAAQ,MAAM,CAAC,SAAP,CAAA,CAAV;OAAP;KAAX;GAAtB;;EAEA,cAAA,GAAiB,SAAC,KAAD,EAAQ,QAAR;IACf,QAAQ,CAAC,MAAT,GAAkB;WAClB,QAAQ,CAAC,IAAT,GAAgB;MAAA,CAAA,EAAG,WAAW,CAAC,GAAZ,CAAA,CAAH;;EAFD;AAbjB","file":"search.js","sourcesContent":["searchInput = $('#searchInput')\r\nengine = new Bloodhound(\r\n  remote:\r\n    url: '/users/search'\r\n    prepare: prepareRequest\r\n    transform: (response) -> response.data\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace\r\n  datumTokenizer: Bloodhound.tokenizers.whitespace\r\n)\r\n\r\nengine.initialize()\r\nsearchInput.typeahead(typeahead: [null, { source: engine.ttAdapter() }])\r\n\r\nprepareRequest = (query, settings) ->\r\n  settings.method = 'get'\r\n  settings.data = q: searchInput.val()"],"sourceRoot":"/source/"}